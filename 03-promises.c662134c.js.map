{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAO,CACXC,KAAMC,SAASC,cAAc,SAC5BC,MAAOF,SAASC,cAAc,gBAC/BE,KAAMH,SAASC,cAAc,eAC7BG,OAAQJ,SAASC,cAAc,kBAoCjC,SAASI,EAAcC,EAAUJ,GAE7B,OAAO,IAAIK,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GACpCC,YAAW,WACPH,EACCF,EAAQ,CAAEF,WAAUJ,UAEzBO,EAAO,CAAEH,WAAUJ,S,GAElBA,E,IAzCTJ,EAAKC,KAAKe,iBAAiB,UAG3B,SAAmBC,GACjBA,EAAMC,iBAIN,IAFA,IAA4BC,EAiBrB,CACNf,MAAOgB,OAAOpB,EAAKI,MAAMiB,OACxBhB,KAAMe,OAAOpB,EAAKK,KAAKgB,OACvBf,OAAQc,OAAOpB,EAAKM,OAAOe,QApBxBC,EAAuBH,EAAvBf,MAAOC,EAAgBc,EAAhBd,KAAMC,EAAUa,EAAVb,OAETiB,EAAW,EAAGA,GAAYjB,EAAQiB,GAAY,EACrDhB,EAAcgB,EAAUD,GACrBE,MAAK,SAAAC,G,IAAGjB,EAAQiB,EAARjB,SAAUJ,EAAKqB,EAALrB,MACjBsB,EAAA5B,GAAS6B,OAAOC,QAAQ,uBAAwCC,OAAfrB,EAAS,QAAYqB,OAANzB,EAAM,M,IAEvE0B,OAAM,SAAAL,G,IAAGjB,EAAQiB,EAARjB,SAAUJ,EAAKqB,EAALrB,MAClBsB,EAAA5B,GAAS6B,OAAOI,QAAQ,sBAAuCF,OAAfrB,EAAS,QAAYqB,OAANzB,EAAM,M,IAEzEkB,GAASjB,C","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst refs = { \n  form: document.querySelector('.form'),\n   delay: document.querySelector('[name=delay]'),\n  step: document.querySelector('[name=step]'),\n  amount: document.querySelector('[name=amount]'),\n     \n}\n\n\nrefs.form.addEventListener('submit', onSubmit);\n\n\nfunction onSubmit (event) {\n  event.preventDefault();\n\n  let {delay, step, amount} = getValue()\n\n  for (let position = 1; position <= amount; position += 1) {\n    createPromise(position, delay)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n    delay += step;\n  }\n  \n  \n}\n\nfunction getValue() {\n  return { \n   delay: Number(refs.delay.value),\n    step: Number(refs.step.value),\n    amount: Number(refs.amount.value),\n }\n}\n\n\nfunction createPromise(position, delay) {\n    \n    return new Promise((resolve, reject) => {\n      const shouldResolve = Math.random() > 0.3;\n        setTimeout(() => {\n        if (shouldResolve) {\n             resolve({ position, delay });\n         } else {\n        reject({ position, delay })\n        }\n      }, delay)\n    })\n       \n  }\n\n\n\n\n\n\n\n// const refs = {\n//   formEl: document.querySelector('.form'),\n//   delayEL: document.querySelector('input[name=\"delay\"]'),\n//   stepEl: document.querySelector('input[name=\"step\"]'),\n//   amountEl: document.querySelector('input[name=\"amount\"]'),\n// };\n\n// refs.formEl.addEventListener('submit', onFormSubmit);\n\n// function onFormSubmit(event) {\n//   event.preventDefault();\n\n//   let { delay, step, amount } = onGettingData();\n\n//   for (let position = 1; position <= amount; position += 1) {\n//     createPromise(position, delay)\n//       .then(({ position, delay }) => {\n//         Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n//       })\n//       .catch(({ position, delay }) => {\n//         Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n//       });\n//     delay += step;\n//   }\n// }\n\n// function createPromise(position, delay) {\n//   return new Promise((resolve, reject) => {\n//     const shouldResolve = Math.random() > 0.3;\n\n//     setTimeout(()=> {\n//       if (shouldResolve) {\n//         resolve({ position, delay });\n//       } else {\n//         reject({ position, delay });\n//       }\n//     }, delay);\n//   });\n// }\n\n// function onGettingData() {\n//   return {\n//     delay: Number(refs.delayEL.value),\n//     step: Number(refs.stepEl.value),\n//     amount: Number(refs.amountEl.value),\n//   };\n// }"],"names":["$iU1Pc","parcelRequire","$ce04d3a99e08e73b$var$refs","form","document","querySelector","delay","step","amount","$ce04d3a99e08e73b$var$createPromise","position","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","addEventListener","event","preventDefault","ref","Number","value","delay1","position1","then","param","$parcel$interopDefault","Notify","success","concat","catch","failure"],"version":3,"file":"03-promises.c662134c.js.map"}
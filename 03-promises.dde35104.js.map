{"mappings":"oeAAAA,EAAA,SAGQC,SAASC,cAAc,SACrBD,SAASC,cAAc,gBACzBD,SAASC,cAAc,eACrBD,SAASC,cAAc,iBACpBD,SAASC,cAAc,iBALpC,MAWMC,EAAU,IAAIC,SAAQ,CAACC,EAASC,KACpC,MAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,KAEPH,GACFF,EAAQ,eAGRC,EAAM,aAAW,GAChB,KAAK,IAGVK,QAAQC,IAAIT,GAEZA,EAAQU,MAAKC,IACXH,QAAQC,IAAIE,EAAO,IAClBC,IACDJ,QAAQC,IAAIG,EAAM","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst refs = { \n  form: document.querySelector('.form'),\n   delay: document.querySelector('[name=delay]'),\n  step: document.querySelector('[name=step]'),\n  amount: document.querySelector('[name=amount]'),\n  submitBtn: document.querySelector('[type=submit]')\n     \n}\n\n// console.log(refs.submitBtn);\n\nconst promise = new Promise((resolve, reject) => { \n  const shouldResolve = Math.random() > 0.3;\n  setTimeout(() => { \n    \n  if (shouldResolve) {\n    resolve(`✅ Fulfilled`)\n    \n  }\n  reject (`❌ Rejected`)\n  }, 1500)\n})\n\nconsole.log(promise);\n\npromise.then(result => {\n  console.log(result);\n}, error => {\n  console.log(error)\n},\n);\n\n// function createPromise(position, delay) {\n//   const shouldResolve = Math.random() > 0.3;\n//   if (shouldResolve) {\n//     // Fulfill\n//   } else {\n//     // Reject\n//   }\n// }\n\n\n// createPromise(2, 1500)\n//   .then(({ position, delay }) => {\n//     console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n//   })\n//   .catch(({ position, delay }) => {\n//     console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n//   });\n\n"],"names":["parcelRequire","document","querySelector","$47d4ff9957288465$var$promise","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","console","log","then","result","error"],"version":3,"file":"03-promises.dde35104.js.map"}
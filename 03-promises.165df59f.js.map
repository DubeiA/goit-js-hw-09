{"mappings":"khBAEA,IAAMA,EAAO,CACXC,KAAMC,SAASC,cAAc,SAC5BC,MAAOF,SAASC,cAAc,gBAC/BE,KAAMH,SAASC,cAAc,eAC7BG,OAAQJ,SAASC,cAAc,iBAC/BI,UAAWL,SAASC,cAAc,kBAKpCH,EAAKC,KAAKO,iBAAiB,UAAW,SAAUC,GAC9CA,EAAMC,iBAEN,IAA4BC,EAQrB,CACLP,MAAOJ,EAAKI,MAAMQ,MAClBP,KAAML,EAAKK,KAAKO,MAChBN,OAAQN,EAAKM,OAAOM,OAXjBR,EAAuBO,EAAvBP,MAAOC,EAAgBM,EAAhBN,KAAMC,EAAUK,EAAVL,OAElBO,QAAQC,IAAK,CAAEV,QAAOC,OAAMC,U,IAqDnB,IAALS,EAAc,EACZC,EAAmBhB,EAAKM,OAAOM,MAiBjCG,IAAgBC,EAKpBC,YAAW,WACTJ,QAAQC,IAAI,SACZC,GAAe,C,GACd,KAPDF,QAAQC,IAAK,e","sources":["src/js/03-promises.js"],"sourcesContent":["// import Notiflix from 'notiflix';\n\nconst refs = { \n  form: document.querySelector('.form'),\n   delay: document.querySelector('[name=delay]'),\n  step: document.querySelector('[name=step]'),\n  amount: document.querySelector('[name=amount]'),\n  submitBtn: document.querySelector('[type=submit]')\n     \n}\n\n\nrefs.form.addEventListener('submit' , function (event) {\n  event.preventDefault();\n\n  let {delay, step, amount} = getValue()\n\n  console.log( { delay, step, amount });\n\n  return \n})\n\nfunction getValue() {\n  return { \n    delay: refs.delay.value,\n    step: refs.step.value,\n    amount: refs.amount.value\n }\n}\n\n\n\n  // ======================================\n  // Проміси\n\n  // const promise = new Promise((resolve, reject) => { \n  //   const shouldResolve = Math.random() > 0.3;\n  //   setTimeout(() => { \n    \n  //   if (shouldResolve) {\n  //     resolve(`Fulfilled`)\n    \n  //   }\n  //   reject (`Rejected`)\n  //   }, 1500)\n  // })\n\n  // console.log(promise);\n\n  // promise.then(onFulldield, onReject);\n\n\n  // function onFulldield(result) {\n  //   console.log(`✅ ${result}`);\n  // }\n\n  // function onReject(error) {\n  //   console.log(`❌ ${error}`);\n  // }\n\n\n\n\n\n\n  // ============================================\n  // рахувалка\n\n\n\n  let repeatCount = 0;\n  const MAX_REPEAT_COUNT = refs.amount.value;\n\n\n  // const repeatPromise = setInterval(() => {\n  //   if (repeatCount === MAX_REPEAT_COUNT) {\n  //     console.log(`done 3 times`);\n  //     clearInterval(repeatPromise)\n  //     return\n  //   }\n\n\n  //     console.log('Start');\n  //     repeatCount += 1;\n  //   }, 1000)\n\n\n\n  if (repeatCount === MAX_REPEAT_COUNT) {\n    console.log(`done 4 times`);\n    return\n  }\n\n  setTimeout(() => {\n    console.log('Start');\n    repeatCount += 1;\n  }, 1000)\n\n\n\n  // ======================================================== \n  // Матеріал для завдання\n\n  // function createPromise(position, delay) {\n  //   const shouldResolve = Math.random() > 0.3;\n  //   if (shouldResolve) {\n  //     // Fulfill\n  //   } else {\n  //     // Reject\n  //   }\n  // }\n\n  // createPromise(2, 1500)\n  //   .then(({ position, delay }) => {\n  //     console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n  //   })\n  //   .catch(({ position, delay }) => {\n  //     console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n  //   });\n\n"],"names":["refs","form","document","querySelector","delay","step","amount","submitBtn","addEventListener","event","preventDefault","ref","value","console","log","repeatCount","MAX_REPEAT_COUNT","setTimeout"],"version":3,"file":"03-promises.165df59f.js.map"}